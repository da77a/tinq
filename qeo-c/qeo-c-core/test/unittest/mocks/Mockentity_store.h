/*
 * Copyright (c) 2016 - Qeo LLC
 *
 * The source code form of this Qeo Open Source Project component is subject
 * to the terms of the Clear BSD license.
 *
 * You can redistribute it and/or modify it under the terms of the Clear BSD
 * License (http://directory.fsf.org/wiki/License:ClearBSD). See LICENSE file
 * for more details.
 *
 * The Qeo Open Source Project also includes third party Open Source Software.
 * See LICENSE file for more details.
 */

/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKENTITY_STORE_H
#define _MOCKENTITY_STORE_H

#include "unity.h"
#include "entity_store.h"

void Mockentity_store_Init(void);
void Mockentity_store_Destroy(void);
void Mockentity_store_Verify(void);




#define entity_store_init_IgnoreAndReturn(cmock_retval) entity_store_init_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void entity_store_init_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, qeo_retcode_t cmock_to_return);
#define entity_store_init_ExpectAndReturn(cmock_retval) entity_store_init_CMockExpectAndReturn(__LINE__, cmock_retval)
void entity_store_init_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, qeo_retcode_t cmock_to_return);
typedef qeo_retcode_t (* CMOCK_entity_store_init_CALLBACK)(int cmock_num_calls);
void entity_store_init_StubWithCallback(CMOCK_entity_store_init_CALLBACK Callback);
#define entity_store_add_IgnoreAndReturn(cmock_retval) entity_store_add_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void entity_store_add_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, qeo_retcode_t cmock_to_return);
#define entity_store_add_ExpectAndReturn(entity, cmock_retval) entity_store_add_CMockExpectAndReturn(__LINE__, entity, cmock_retval)
void entity_store_add_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, entity_t* entity, qeo_retcode_t cmock_to_return);
typedef qeo_retcode_t (* CMOCK_entity_store_add_CALLBACK)(entity_t* entity, int cmock_num_calls);
void entity_store_add_StubWithCallback(CMOCK_entity_store_add_CALLBACK Callback);
#define entity_store_remove_IgnoreAndReturn(cmock_retval) entity_store_remove_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void entity_store_remove_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, qeo_retcode_t cmock_to_return);
#define entity_store_remove_ExpectAndReturn(entity, cmock_retval) entity_store_remove_CMockExpectAndReturn(__LINE__, entity, cmock_retval)
void entity_store_remove_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const entity_t* entity, qeo_retcode_t cmock_to_return);
typedef qeo_retcode_t (* CMOCK_entity_store_remove_CALLBACK)(const entity_t* entity, int cmock_num_calls);
void entity_store_remove_StubWithCallback(CMOCK_entity_store_remove_CALLBACK Callback);
#define entity_store_fini_IgnoreAndReturn(cmock_retval) entity_store_fini_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void entity_store_fini_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, qeo_retcode_t cmock_to_return);
#define entity_store_fini_ExpectAndReturn(cmock_retval) entity_store_fini_CMockExpectAndReturn(__LINE__, cmock_retval)
void entity_store_fini_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, qeo_retcode_t cmock_to_return);
typedef qeo_retcode_t (* CMOCK_entity_store_fini_CALLBACK)(int cmock_num_calls);
void entity_store_fini_StubWithCallback(CMOCK_entity_store_fini_CALLBACK Callback);
#define entity_store_update_user_data_IgnoreAndReturn(cmock_retval) entity_store_update_user_data_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void entity_store_update_user_data_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, qeo_retcode_t cmock_to_return);
#define entity_store_update_user_data_ExpectAndReturn(factory, cmock_retval) entity_store_update_user_data_CMockExpectAndReturn(__LINE__, factory, cmock_retval)
void entity_store_update_user_data_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const qeo_factory_t* factory, qeo_retcode_t cmock_to_return);
typedef qeo_retcode_t (* CMOCK_entity_store_update_user_data_CALLBACK)(const qeo_factory_t* factory, int cmock_num_calls);
void entity_store_update_user_data_StubWithCallback(CMOCK_entity_store_update_user_data_CALLBACK Callback);

#endif
