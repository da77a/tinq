/*
 * Copyright (c) 2014 - Qeo LLC
 *
 * The source code form of this Qeo Open Source Project component is subject
 * to the terms of the Clear BSD license.
 *
 * You can redistribute it and/or modify it under the terms of the Clear BSD
 * License (http://directory.fsf.org/wiki/License:ClearBSD). See LICENSE file
 * for more details.
 *
 * The Qeo Open Source Project also includes third party Open Source Software.
 * See LICENSE file for more details.
 */

/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKFORWARDER_H
#define _MOCKFORWARDER_H

#include "unity.h"
#include "forwarder.h"

void Mockforwarder_Init(void);
void Mockforwarder_Destroy(void);
void Mockforwarder_Verify(void);




#define fwd_init_pre_auth_IgnoreAndReturn(cmock_retval) fwd_init_pre_auth_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void fwd_init_pre_auth_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, qeo_retcode_t cmock_to_return);
#define fwd_init_pre_auth_ExpectAndReturn(factory, cmock_retval) fwd_init_pre_auth_CMockExpectAndReturn(__LINE__, factory, cmock_retval)
void fwd_init_pre_auth_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, qeo_factory_t* factory, qeo_retcode_t cmock_to_return);
typedef qeo_retcode_t (* CMOCK_fwd_init_pre_auth_CALLBACK)(qeo_factory_t* factory, int cmock_num_calls);
void fwd_init_pre_auth_StubWithCallback(CMOCK_fwd_init_pre_auth_CALLBACK Callback);
#define fwd_init_post_auth_IgnoreAndReturn(cmock_retval) fwd_init_post_auth_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void fwd_init_post_auth_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, qeo_retcode_t cmock_to_return);
#define fwd_init_post_auth_ExpectAndReturn(factory, cmock_retval) fwd_init_post_auth_CMockExpectAndReturn(__LINE__, factory, cmock_retval)
void fwd_init_post_auth_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, qeo_factory_t* factory, qeo_retcode_t cmock_to_return);
typedef qeo_retcode_t (* CMOCK_fwd_init_post_auth_CALLBACK)(qeo_factory_t* factory, int cmock_num_calls);
void fwd_init_post_auth_StubWithCallback(CMOCK_fwd_init_post_auth_CALLBACK Callback);
#define fwd_server_reconfig_IgnoreAndReturn(cmock_retval) fwd_server_reconfig_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void fwd_server_reconfig_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, qeo_retcode_t cmock_to_return);
#define fwd_server_reconfig_ExpectAndReturn(factory, ip_address, port, cmock_retval) fwd_server_reconfig_CMockExpectAndReturn(__LINE__, factory, ip_address, port, cmock_retval)
void fwd_server_reconfig_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, qeo_factory_t* factory, const char* ip_address, int port, qeo_retcode_t cmock_to_return);
typedef qeo_retcode_t (* CMOCK_fwd_server_reconfig_CALLBACK)(qeo_factory_t* factory, const char* ip_address, int port, int cmock_num_calls);
void fwd_server_reconfig_StubWithCallback(CMOCK_fwd_server_reconfig_CALLBACK Callback);
#define fwd_destroy_Ignore() fwd_destroy_CMockIgnore(__LINE__)
void fwd_destroy_CMockIgnore(UNITY_LINE_TYPE cmock_line);
#define fwd_destroy_Expect(factory) fwd_destroy_CMockExpect(__LINE__, factory)
void fwd_destroy_CMockExpect(UNITY_LINE_TYPE cmock_line, qeo_factory_t* factory);
typedef void (* CMOCK_fwd_destroy_CALLBACK)(qeo_factory_t* factory, int cmock_num_calls);
void fwd_destroy_StubWithCallback(CMOCK_fwd_destroy_CALLBACK Callback);

#endif
