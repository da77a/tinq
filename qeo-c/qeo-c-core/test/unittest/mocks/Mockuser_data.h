/*
 * Copyright (c) 2015 - Qeo LLC
 *
 * The source code form of this Qeo Open Source Project component is subject
 * to the terms of the Clear BSD license.
 *
 * You can redistribute it and/or modify it under the terms of the Clear BSD
 * License (http://directory.fsf.org/wiki/License:ClearBSD). See LICENSE file
 * for more details.
 *
 * The Qeo Open Source Project also includes third party Open Source Software.
 * See LICENSE file for more details.
 */

/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKUSER_DATA_H
#define _MOCKUSER_DATA_H

#include "unity.h"
#include "user_data.h"

void Mockuser_data_Init(void);
void Mockuser_data_Destroy(void);
void Mockuser_data_Verify(void);




#define reader_user_data_update_IgnoreAndReturn(cmock_retval) reader_user_data_update_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void reader_user_data_update_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, qeo_retcode_t cmock_to_return);
#define reader_user_data_update_ExpectAndReturn(reader, cmock_retval) reader_user_data_update_CMockExpectAndReturn(__LINE__, reader, cmock_retval)
void reader_user_data_update_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const qeocore_reader_t* reader, qeo_retcode_t cmock_to_return);
typedef qeo_retcode_t (* CMOCK_reader_user_data_update_CALLBACK)(const qeocore_reader_t* reader, int cmock_num_calls);
void reader_user_data_update_StubWithCallback(CMOCK_reader_user_data_update_CALLBACK Callback);
#define writer_user_data_update_IgnoreAndReturn(cmock_retval) writer_user_data_update_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void writer_user_data_update_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, qeo_retcode_t cmock_to_return);
#define writer_user_data_update_ExpectAndReturn(writer, cmock_retval) writer_user_data_update_CMockExpectAndReturn(__LINE__, writer, cmock_retval)
void writer_user_data_update_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const qeocore_writer_t* writer, qeo_retcode_t cmock_to_return);
typedef qeo_retcode_t (* CMOCK_writer_user_data_update_CALLBACK)(const qeocore_writer_t* writer, int cmock_num_calls);
void writer_user_data_update_StubWithCallback(CMOCK_writer_user_data_update_CALLBACK Callback);

#endif
