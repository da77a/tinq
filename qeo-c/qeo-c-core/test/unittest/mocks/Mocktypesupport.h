/*
 * Copyright (c) 2016 - Qeo LLC
 *
 * The source code form of this Qeo Open Source Project component is subject
 * to the terms of the Clear BSD license.
 *
 * You can redistribute it and/or modify it under the terms of the Clear BSD
 * License (http://directory.fsf.org/wiki/License:ClearBSD). See LICENSE file
 * for more details.
 *
 * The Qeo Open Source Project also includes third party Open Source Software.
 * See LICENSE file for more details.
 */

/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKTYPESUPPORT_H
#define _MOCKTYPESUPPORT_H

#include "unity.h"
#include "typesupport.h"

void Mocktypesupport_Init(void);
void Mocktypesupport_Destroy(void);
void Mocktypesupport_Verify(void);




#define calculate_member_id_IgnoreAndReturn(cmock_retval) calculate_member_id_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void calculate_member_id_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define calculate_member_id_ExpectAndReturn(name, cmock_retval) calculate_member_id_CMockExpectAndReturn(__LINE__, name, cmock_retval)
void calculate_member_id_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const char* name, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_calculate_member_id_CALLBACK)(const char* name, int cmock_num_calls);
void calculate_member_id_StubWithCallback(CMOCK_calculate_member_id_CALLBACK Callback);
#define qeocore_type_use_IgnoreAndReturn(cmock_retval) qeocore_type_use_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void qeocore_type_use_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, qeo_retcode_t cmock_to_return);
#define qeocore_type_use_ExpectAndReturn(type, cmock_retval) qeocore_type_use_CMockExpectAndReturn(__LINE__, type, cmock_retval)
void qeocore_type_use_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, qeocore_type_t* type, qeo_retcode_t cmock_to_return);
typedef qeo_retcode_t (* CMOCK_qeocore_type_use_CALLBACK)(qeocore_type_t* type, int cmock_num_calls);
void qeocore_type_use_StubWithCallback(CMOCK_qeocore_type_use_CALLBACK Callback);

#endif
