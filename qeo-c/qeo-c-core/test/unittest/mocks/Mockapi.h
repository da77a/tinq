/*
 * Copyright (c) 2015 - Qeo LLC
 *
 * The source code form of this Qeo Open Source Project component is subject
 * to the terms of the Clear BSD license.
 *
 * You can redistribute it and/or modify it under the terms of the Clear BSD
 * License (http://directory.fsf.org/wiki/License:ClearBSD). See LICENSE file
 * for more details.
 *
 * The Qeo Open Source Project also includes third party Open Source Software.
 * See LICENSE file for more details.
 */

/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKAPI_H
#define _MOCKAPI_H

#include "unity.h"
#include "qeocore/api.h"

void Mockapi_Init(void);
void Mockapi_Destroy(void);
void Mockapi_Verify(void);




#define qeocore_data_reset_IgnoreAndReturn(cmock_retval) qeocore_data_reset_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void qeocore_data_reset_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, qeo_retcode_t cmock_to_return);
#define qeocore_data_reset_ExpectAndReturn(data, cmock_retval) qeocore_data_reset_CMockExpectAndReturn(__LINE__, data, cmock_retval)
void qeocore_data_reset_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, qeocore_data_t* data, qeo_retcode_t cmock_to_return);
typedef qeo_retcode_t (* CMOCK_qeocore_data_reset_CALLBACK)(qeocore_data_t* data, int cmock_num_calls);
void qeocore_data_reset_StubWithCallback(CMOCK_qeocore_data_reset_CALLBACK Callback);
#define qeocore_data_free_Ignore() qeocore_data_free_CMockIgnore(__LINE__)
void qeocore_data_free_CMockIgnore(UNITY_LINE_TYPE cmock_line);
#define qeocore_data_free_Expect(data) qeocore_data_free_CMockExpect(__LINE__, data)
void qeocore_data_free_CMockExpect(UNITY_LINE_TYPE cmock_line, qeocore_data_t* data);
typedef void (* CMOCK_qeocore_data_free_CALLBACK)(qeocore_data_t* data, int cmock_num_calls);
void qeocore_data_free_StubWithCallback(CMOCK_qeocore_data_free_CALLBACK Callback);
#define qeocore_data_set_member_IgnoreAndReturn(cmock_retval) qeocore_data_set_member_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void qeocore_data_set_member_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, qeo_retcode_t cmock_to_return);
#define qeocore_data_set_member_ExpectAndReturn(data, id, value, cmock_retval) qeocore_data_set_member_CMockExpectAndReturn(__LINE__, data, id, value, cmock_retval)
void qeocore_data_set_member_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, qeocore_data_t* data, qeocore_member_id_t id, const void* value, qeo_retcode_t cmock_to_return);
typedef qeo_retcode_t (* CMOCK_qeocore_data_set_member_CALLBACK)(qeocore_data_t* data, qeocore_member_id_t id, const void* value, int cmock_num_calls);
void qeocore_data_set_member_StubWithCallback(CMOCK_qeocore_data_set_member_CALLBACK Callback);
#define qeocore_data_get_member_IgnoreAndReturn(cmock_retval) qeocore_data_get_member_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void qeocore_data_get_member_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, qeo_retcode_t cmock_to_return);
#define qeocore_data_get_member_ExpectAndReturn(data, id, value, cmock_retval) qeocore_data_get_member_CMockExpectAndReturn(__LINE__, data, id, value, cmock_retval)
void qeocore_data_get_member_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const qeocore_data_t* data, qeocore_member_id_t id, void* value, qeo_retcode_t cmock_to_return);
typedef qeo_retcode_t (* CMOCK_qeocore_data_get_member_CALLBACK)(const qeocore_data_t* data, qeocore_member_id_t id, void* value, int cmock_num_calls);
void qeocore_data_get_member_StubWithCallback(CMOCK_qeocore_data_get_member_CALLBACK Callback);
#define qeocore_data_sequence_new_IgnoreAndReturn(cmock_retval) qeocore_data_sequence_new_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void qeocore_data_sequence_new_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, qeo_retcode_t cmock_to_return);
#define qeocore_data_sequence_new_ExpectAndReturn(data, sequence, num, cmock_retval) qeocore_data_sequence_new_CMockExpectAndReturn(__LINE__, data, sequence, num, cmock_retval)
void qeocore_data_sequence_new_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const qeocore_data_t* data, qeo_sequence_t* sequence, int num, qeo_retcode_t cmock_to_return);
typedef qeo_retcode_t (* CMOCK_qeocore_data_sequence_new_CALLBACK)(const qeocore_data_t* data, qeo_sequence_t* sequence, int num, int cmock_num_calls);
void qeocore_data_sequence_new_StubWithCallback(CMOCK_qeocore_data_sequence_new_CALLBACK Callback);
#define qeocore_data_sequence_free_IgnoreAndReturn(cmock_retval) qeocore_data_sequence_free_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void qeocore_data_sequence_free_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, qeo_retcode_t cmock_to_return);
#define qeocore_data_sequence_free_ExpectAndReturn(data, sequence, cmock_retval) qeocore_data_sequence_free_CMockExpectAndReturn(__LINE__, data, sequence, cmock_retval)
void qeocore_data_sequence_free_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const qeocore_data_t* data, qeo_sequence_t* sequence, qeo_retcode_t cmock_to_return);
typedef qeo_retcode_t (* CMOCK_qeocore_data_sequence_free_CALLBACK)(const qeocore_data_t* data, qeo_sequence_t* sequence, int cmock_num_calls);
void qeocore_data_sequence_free_StubWithCallback(CMOCK_qeocore_data_sequence_free_CALLBACK Callback);
#define qeocore_data_sequence_set_IgnoreAndReturn(cmock_retval) qeocore_data_sequence_set_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void qeocore_data_sequence_set_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, qeo_retcode_t cmock_to_return);
#define qeocore_data_sequence_set_ExpectAndReturn(data, sequence, offset, cmock_retval) qeocore_data_sequence_set_CMockExpectAndReturn(__LINE__, data, sequence, offset, cmock_retval)
void qeocore_data_sequence_set_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, qeocore_data_t* data, const qeo_sequence_t* sequence, int offset, qeo_retcode_t cmock_to_return);
typedef qeo_retcode_t (* CMOCK_qeocore_data_sequence_set_CALLBACK)(qeocore_data_t* data, const qeo_sequence_t* sequence, int offset, int cmock_num_calls);
void qeocore_data_sequence_set_StubWithCallback(CMOCK_qeocore_data_sequence_set_CALLBACK Callback);
#define qeocore_data_sequence_get_IgnoreAndReturn(cmock_retval) qeocore_data_sequence_get_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void qeocore_data_sequence_get_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, qeo_retcode_t cmock_to_return);
#define qeocore_data_sequence_get_ExpectAndReturn(data, sequence, offset, num, cmock_retval) qeocore_data_sequence_get_CMockExpectAndReturn(__LINE__, data, sequence, offset, num, cmock_retval)
void qeocore_data_sequence_get_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const qeocore_data_t* data, qeo_sequence_t* sequence, int offset, int num, qeo_retcode_t cmock_to_return);
typedef qeo_retcode_t (* CMOCK_qeocore_data_sequence_get_CALLBACK)(const qeocore_data_t* data, qeo_sequence_t* sequence, int offset, int num, int cmock_num_calls);
void qeocore_data_sequence_get_StubWithCallback(CMOCK_qeocore_data_sequence_get_CALLBACK Callback);
#define qeocore_data_get_status_IgnoreAndReturn(cmock_retval) qeocore_data_get_status_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void qeocore_data_get_status_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, qeocore_data_status_t cmock_to_return);
#define qeocore_data_get_status_ExpectAndReturn(data, cmock_retval) qeocore_data_get_status_CMockExpectAndReturn(__LINE__, data, cmock_retval)
void qeocore_data_get_status_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const qeocore_data_t* data, qeocore_data_status_t cmock_to_return);
typedef qeocore_data_status_t (* CMOCK_qeocore_data_get_status_CALLBACK)(const qeocore_data_t* data, int cmock_num_calls);
void qeocore_data_get_status_StubWithCallback(CMOCK_qeocore_data_get_status_CALLBACK Callback);
#define qeocore_data_get_instance_handle_IgnoreAndReturn(cmock_retval) qeocore_data_get_instance_handle_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void qeocore_data_get_instance_handle_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, unsigned int cmock_to_return);
#define qeocore_data_get_instance_handle_ExpectAndReturn(data, cmock_retval) qeocore_data_get_instance_handle_CMockExpectAndReturn(__LINE__, data, cmock_retval)
void qeocore_data_get_instance_handle_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const qeocore_data_t* data, unsigned int cmock_to_return);
typedef unsigned int (* CMOCK_qeocore_data_get_instance_handle_CALLBACK)(const qeocore_data_t* data, int cmock_num_calls);
void qeocore_data_get_instance_handle_StubWithCallback(CMOCK_qeocore_data_get_instance_handle_CALLBACK Callback);
#define qeocore_data_get_data_IgnoreAndReturn(cmock_retval) qeocore_data_get_data_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void qeocore_data_get_data_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, void* cmock_to_return);
#define qeocore_data_get_data_ExpectAndReturn(data, cmock_retval) qeocore_data_get_data_CMockExpectAndReturn(__LINE__, data, cmock_retval)
void qeocore_data_get_data_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const qeocore_data_t* data, void* cmock_to_return);
typedef void* (* CMOCK_qeocore_data_get_data_CALLBACK)(const qeocore_data_t* data, int cmock_num_calls);
void qeocore_data_get_data_StubWithCallback(CMOCK_qeocore_data_get_data_CALLBACK Callback);
#define qeocore_reader_open_IgnoreAndReturn(cmock_retval) qeocore_reader_open_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void qeocore_reader_open_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, qeocore_reader_t* cmock_to_return);
#define qeocore_reader_open_ExpectAndReturn(factory, type, topic_name, flags, listener, rc, cmock_retval) qeocore_reader_open_CMockExpectAndReturn(__LINE__, factory, type, topic_name, flags, listener, rc, cmock_retval)
void qeocore_reader_open_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const qeo_factory_t* factory, qeocore_type_t* type, const char* topic_name, int flags, const qeocore_reader_listener_t* listener, qeo_retcode_t* rc, qeocore_reader_t* cmock_to_return);
typedef qeocore_reader_t* (* CMOCK_qeocore_reader_open_CALLBACK)(const qeo_factory_t* factory, qeocore_type_t* type, const char* topic_name, int flags, const qeocore_reader_listener_t* listener, qeo_retcode_t* rc, int cmock_num_calls);
void qeocore_reader_open_StubWithCallback(CMOCK_qeocore_reader_open_CALLBACK Callback);
#define qeocore_reader_enable_IgnoreAndReturn(cmock_retval) qeocore_reader_enable_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void qeocore_reader_enable_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, qeo_retcode_t cmock_to_return);
#define qeocore_reader_enable_ExpectAndReturn(reader, cmock_retval) qeocore_reader_enable_CMockExpectAndReturn(__LINE__, reader, cmock_retval)
void qeocore_reader_enable_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, qeocore_reader_t* reader, qeo_retcode_t cmock_to_return);
typedef qeo_retcode_t (* CMOCK_qeocore_reader_enable_CALLBACK)(qeocore_reader_t* reader, int cmock_num_calls);
void qeocore_reader_enable_StubWithCallback(CMOCK_qeocore_reader_enable_CALLBACK Callback);
#define qeocore_reader_close_Ignore() qeocore_reader_close_CMockIgnore(__LINE__)
void qeocore_reader_close_CMockIgnore(UNITY_LINE_TYPE cmock_line);
#define qeocore_reader_close_Expect(reader) qeocore_reader_close_CMockExpect(__LINE__, reader)
void qeocore_reader_close_CMockExpect(UNITY_LINE_TYPE cmock_line, qeocore_reader_t* reader);
typedef void (* CMOCK_qeocore_reader_close_CALLBACK)(qeocore_reader_t* reader, int cmock_num_calls);
void qeocore_reader_close_StubWithCallback(CMOCK_qeocore_reader_close_CALLBACK Callback);
#define qeocore_reader_get_userdata_IgnoreAndReturn(cmock_retval) qeocore_reader_get_userdata_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void qeocore_reader_get_userdata_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uintptr_t cmock_to_return);
#define qeocore_reader_get_userdata_ExpectAndReturn(reader, cmock_retval) qeocore_reader_get_userdata_CMockExpectAndReturn(__LINE__, reader, cmock_retval)
void qeocore_reader_get_userdata_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const qeocore_reader_t* reader, uintptr_t cmock_to_return);
typedef uintptr_t (* CMOCK_qeocore_reader_get_userdata_CALLBACK)(const qeocore_reader_t* reader, int cmock_num_calls);
void qeocore_reader_get_userdata_StubWithCallback(CMOCK_qeocore_reader_get_userdata_CALLBACK Callback);
#define qeocore_reader_data_new_IgnoreAndReturn(cmock_retval) qeocore_reader_data_new_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void qeocore_reader_data_new_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, qeocore_data_t* cmock_to_return);
#define qeocore_reader_data_new_ExpectAndReturn(reader, cmock_retval) qeocore_reader_data_new_CMockExpectAndReturn(__LINE__, reader, cmock_retval)
void qeocore_reader_data_new_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const qeocore_reader_t* reader, qeocore_data_t* cmock_to_return);
typedef qeocore_data_t* (* CMOCK_qeocore_reader_data_new_CALLBACK)(const qeocore_reader_t* reader, int cmock_num_calls);
void qeocore_reader_data_new_StubWithCallback(CMOCK_qeocore_reader_data_new_CALLBACK Callback);
#define qeocore_reader_read_IgnoreAndReturn(cmock_retval) qeocore_reader_read_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void qeocore_reader_read_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, qeo_retcode_t cmock_to_return);
#define qeocore_reader_read_ExpectAndReturn(reader, filter, data, cmock_retval) qeocore_reader_read_CMockExpectAndReturn(__LINE__, reader, filter, data, cmock_retval)
void qeocore_reader_read_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const qeocore_reader_t* reader, const qeocore_filter_t* filter, qeocore_data_t* data, qeo_retcode_t cmock_to_return);
typedef qeo_retcode_t (* CMOCK_qeocore_reader_read_CALLBACK)(const qeocore_reader_t* reader, const qeocore_filter_t* filter, qeocore_data_t* data, int cmock_num_calls);
void qeocore_reader_read_StubWithCallback(CMOCK_qeocore_reader_read_CALLBACK Callback);
#define qeocore_reader_take_IgnoreAndReturn(cmock_retval) qeocore_reader_take_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void qeocore_reader_take_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, qeo_retcode_t cmock_to_return);
#define qeocore_reader_take_ExpectAndReturn(reader, filter, data, cmock_retval) qeocore_reader_take_CMockExpectAndReturn(__LINE__, reader, filter, data, cmock_retval)
void qeocore_reader_take_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const qeocore_reader_t* reader, const qeocore_filter_t* filter, qeocore_data_t* data, qeo_retcode_t cmock_to_return);
typedef qeo_retcode_t (* CMOCK_qeocore_reader_take_CALLBACK)(const qeocore_reader_t* reader, const qeocore_filter_t* filter, qeocore_data_t* data, int cmock_num_calls);
void qeocore_reader_take_StubWithCallback(CMOCK_qeocore_reader_take_CALLBACK Callback);
#define qeocore_reader_policy_update_IgnoreAndReturn(cmock_retval) qeocore_reader_policy_update_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void qeocore_reader_policy_update_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, qeo_retcode_t cmock_to_return);
#define qeocore_reader_policy_update_ExpectAndReturn(reader, cmock_retval) qeocore_reader_policy_update_CMockExpectAndReturn(__LINE__, reader, cmock_retval)
void qeocore_reader_policy_update_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const qeocore_reader_t* reader, qeo_retcode_t cmock_to_return);
typedef qeo_retcode_t (* CMOCK_qeocore_reader_policy_update_CALLBACK)(const qeocore_reader_t* reader, int cmock_num_calls);
void qeocore_reader_policy_update_StubWithCallback(CMOCK_qeocore_reader_policy_update_CALLBACK Callback);
#define qeocore_reader_bgns_notify_IgnoreAndReturn(cmock_retval) qeocore_reader_bgns_notify_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void qeocore_reader_bgns_notify_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, qeo_retcode_t cmock_to_return);
#define qeocore_reader_bgns_notify_ExpectAndReturn(reader, on, cmock_retval) qeocore_reader_bgns_notify_CMockExpectAndReturn(__LINE__, reader, on, cmock_retval)
void qeocore_reader_bgns_notify_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, qeocore_reader_t* reader, bool on, qeo_retcode_t cmock_to_return);
typedef qeo_retcode_t (* CMOCK_qeocore_reader_bgns_notify_CALLBACK)(qeocore_reader_t* reader, bool on, int cmock_num_calls);
void qeocore_reader_bgns_notify_StubWithCallback(CMOCK_qeocore_reader_bgns_notify_CALLBACK Callback);
#define qeocore_writer_open_IgnoreAndReturn(cmock_retval) qeocore_writer_open_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void qeocore_writer_open_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, qeocore_writer_t* cmock_to_return);
#define qeocore_writer_open_ExpectAndReturn(factory, type, topic_name, flags, listener, rc, cmock_retval) qeocore_writer_open_CMockExpectAndReturn(__LINE__, factory, type, topic_name, flags, listener, rc, cmock_retval)
void qeocore_writer_open_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const qeo_factory_t* factory, qeocore_type_t* type, const char* topic_name, int flags, const qeocore_writer_listener_t* listener, qeo_retcode_t* rc, qeocore_writer_t* cmock_to_return);
typedef qeocore_writer_t* (* CMOCK_qeocore_writer_open_CALLBACK)(const qeo_factory_t* factory, qeocore_type_t* type, const char* topic_name, int flags, const qeocore_writer_listener_t* listener, qeo_retcode_t* rc, int cmock_num_calls);
void qeocore_writer_open_StubWithCallback(CMOCK_qeocore_writer_open_CALLBACK Callback);
#define qeocore_writer_enable_IgnoreAndReturn(cmock_retval) qeocore_writer_enable_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void qeocore_writer_enable_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, qeo_retcode_t cmock_to_return);
#define qeocore_writer_enable_ExpectAndReturn(writer, cmock_retval) qeocore_writer_enable_CMockExpectAndReturn(__LINE__, writer, cmock_retval)
void qeocore_writer_enable_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, qeocore_writer_t* writer, qeo_retcode_t cmock_to_return);
typedef qeo_retcode_t (* CMOCK_qeocore_writer_enable_CALLBACK)(qeocore_writer_t* writer, int cmock_num_calls);
void qeocore_writer_enable_StubWithCallback(CMOCK_qeocore_writer_enable_CALLBACK Callback);
#define qeocore_writer_close_Ignore() qeocore_writer_close_CMockIgnore(__LINE__)
void qeocore_writer_close_CMockIgnore(UNITY_LINE_TYPE cmock_line);
#define qeocore_writer_close_Expect(writer) qeocore_writer_close_CMockExpect(__LINE__, writer)
void qeocore_writer_close_CMockExpect(UNITY_LINE_TYPE cmock_line, qeocore_writer_t* writer);
typedef void (* CMOCK_qeocore_writer_close_CALLBACK)(qeocore_writer_t* writer, int cmock_num_calls);
void qeocore_writer_close_StubWithCallback(CMOCK_qeocore_writer_close_CALLBACK Callback);
#define qeocore_writer_get_userdata_IgnoreAndReturn(cmock_retval) qeocore_writer_get_userdata_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void qeocore_writer_get_userdata_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uintptr_t cmock_to_return);
#define qeocore_writer_get_userdata_ExpectAndReturn(writer, cmock_retval) qeocore_writer_get_userdata_CMockExpectAndReturn(__LINE__, writer, cmock_retval)
void qeocore_writer_get_userdata_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const qeocore_writer_t* writer, uintptr_t cmock_to_return);
typedef uintptr_t (* CMOCK_qeocore_writer_get_userdata_CALLBACK)(const qeocore_writer_t* writer, int cmock_num_calls);
void qeocore_writer_get_userdata_StubWithCallback(CMOCK_qeocore_writer_get_userdata_CALLBACK Callback);
#define qeocore_writer_data_new_IgnoreAndReturn(cmock_retval) qeocore_writer_data_new_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void qeocore_writer_data_new_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, qeocore_data_t* cmock_to_return);
#define qeocore_writer_data_new_ExpectAndReturn(writer, cmock_retval) qeocore_writer_data_new_CMockExpectAndReturn(__LINE__, writer, cmock_retval)
void qeocore_writer_data_new_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const qeocore_writer_t* writer, qeocore_data_t* cmock_to_return);
typedef qeocore_data_t* (* CMOCK_qeocore_writer_data_new_CALLBACK)(const qeocore_writer_t* writer, int cmock_num_calls);
void qeocore_writer_data_new_StubWithCallback(CMOCK_qeocore_writer_data_new_CALLBACK Callback);
#define qeocore_writer_write_IgnoreAndReturn(cmock_retval) qeocore_writer_write_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void qeocore_writer_write_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, qeo_retcode_t cmock_to_return);
#define qeocore_writer_write_ExpectAndReturn(writer, data, cmock_retval) qeocore_writer_write_CMockExpectAndReturn(__LINE__, writer, data, cmock_retval)
void qeocore_writer_write_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const qeocore_writer_t* writer, const void* data, qeo_retcode_t cmock_to_return);
typedef qeo_retcode_t (* CMOCK_qeocore_writer_write_CALLBACK)(const qeocore_writer_t* writer, const void* data, int cmock_num_calls);
void qeocore_writer_write_StubWithCallback(CMOCK_qeocore_writer_write_CALLBACK Callback);
#define qeocore_writer_remove_IgnoreAndReturn(cmock_retval) qeocore_writer_remove_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void qeocore_writer_remove_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, qeo_retcode_t cmock_to_return);
#define qeocore_writer_remove_ExpectAndReturn(writer, data, cmock_retval) qeocore_writer_remove_CMockExpectAndReturn(__LINE__, writer, data, cmock_retval)
void qeocore_writer_remove_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const qeocore_writer_t* writer, const void* data, qeo_retcode_t cmock_to_return);
typedef qeo_retcode_t (* CMOCK_qeocore_writer_remove_CALLBACK)(const qeocore_writer_t* writer, const void* data, int cmock_num_calls);
void qeocore_writer_remove_StubWithCallback(CMOCK_qeocore_writer_remove_CALLBACK Callback);
#define qeocore_writer_policy_update_IgnoreAndReturn(cmock_retval) qeocore_writer_policy_update_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void qeocore_writer_policy_update_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, qeo_retcode_t cmock_to_return);
#define qeocore_writer_policy_update_ExpectAndReturn(writer, cmock_retval) qeocore_writer_policy_update_CMockExpectAndReturn(__LINE__, writer, cmock_retval)
void qeocore_writer_policy_update_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const qeocore_writer_t* writer, qeo_retcode_t cmock_to_return);
typedef qeo_retcode_t (* CMOCK_qeocore_writer_policy_update_CALLBACK)(const qeocore_writer_t* writer, int cmock_num_calls);
void qeocore_writer_policy_update_StubWithCallback(CMOCK_qeocore_writer_policy_update_CALLBACK Callback);

#endif
