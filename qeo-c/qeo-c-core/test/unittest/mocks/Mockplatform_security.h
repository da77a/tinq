/*
 * Copyright (c) 2014 - Qeo LLC
 *
 * The source code form of this Qeo Open Source Project component is subject
 * to the terms of the Clear BSD license.
 *
 * You can redistribute it and/or modify it under the terms of the Clear BSD
 * License (http://directory.fsf.org/wiki/License:ClearBSD). See LICENSE file
 * for more details.
 *
 * The Qeo Open Source Project also includes third party Open Source Software.
 * See LICENSE file for more details.
 */

/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKPLATFORM_SECURITY_H
#define _MOCKPLATFORM_SECURITY_H

#include "unity.h"
#include "qeo/platform_security.h"

void Mockplatform_security_Init(void);
void Mockplatform_security_Destroy(void);
void Mockplatform_security_Verify(void);




#define qeo_platform_security_registration_credentials_needed_IgnoreAndReturn(cmock_retval) qeo_platform_security_registration_credentials_needed_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void qeo_platform_security_registration_credentials_needed_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, qeo_util_retcode_t cmock_to_return);
#define qeo_platform_security_registration_credentials_needed_ExpectAndReturn(context, set_reg_cred_cb, set_cancelled_cb, cmock_retval) qeo_platform_security_registration_credentials_needed_CMockExpectAndReturn(__LINE__, context, set_reg_cred_cb, set_cancelled_cb, cmock_retval)
void qeo_platform_security_registration_credentials_needed_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, qeo_platform_security_context_t context, qeo_platform_security_set_registration_credentials_cb set_reg_cred_cb, qeo_platform_security_registration_credentials_cancelled_cb set_cancelled_cb, qeo_util_retcode_t cmock_to_return);
typedef qeo_util_retcode_t (* CMOCK_qeo_platform_security_registration_credentials_needed_CALLBACK)(qeo_platform_security_context_t context, qeo_platform_security_set_registration_credentials_cb set_reg_cred_cb, qeo_platform_security_registration_credentials_cancelled_cb set_cancelled_cb, int cmock_num_calls);
void qeo_platform_security_registration_credentials_needed_StubWithCallback(CMOCK_qeo_platform_security_registration_credentials_needed_CALLBACK Callback);
#define qeo_platform_security_update_state_Ignore() qeo_platform_security_update_state_CMockIgnore(__LINE__)
void qeo_platform_security_update_state_CMockIgnore(UNITY_LINE_TYPE cmock_line);
#define qeo_platform_security_update_state_Expect(context, state, state_reason) qeo_platform_security_update_state_CMockExpect(__LINE__, context, state, state_reason)
void qeo_platform_security_update_state_CMockExpect(UNITY_LINE_TYPE cmock_line, qeo_platform_security_context_t context, qeo_platform_security_state state, qeo_platform_security_state_reason state_reason);
typedef void (* CMOCK_qeo_platform_security_update_state_CALLBACK)(qeo_platform_security_context_t context, qeo_platform_security_state state, qeo_platform_security_state_reason state_reason, int cmock_num_calls);
void qeo_platform_security_update_state_StubWithCallback(CMOCK_qeo_platform_security_update_state_CALLBACK Callback);
#define qeo_platform_security_remote_registration_confirmation_needed_IgnoreAndReturn(cmock_retval) qeo_platform_security_remote_registration_confirmation_needed_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void qeo_platform_security_remote_registration_confirmation_needed_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, qeo_util_retcode_t cmock_to_return);
#define qeo_platform_security_remote_registration_confirmation_needed_ExpectAndReturn(context, rrcred, cb, cmock_retval) qeo_platform_security_remote_registration_confirmation_needed_CMockExpectAndReturn(__LINE__, context, rrcred, cb, cmock_retval)
void qeo_platform_security_remote_registration_confirmation_needed_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, qeo_platform_security_context_t context, const qeo_platform_security_remote_registration_credentials_t* rrcred, qeo_platform_security_remote_registration_credentials_feedback_cb cb, qeo_util_retcode_t cmock_to_return);
typedef qeo_util_retcode_t (* CMOCK_qeo_platform_security_remote_registration_confirmation_needed_CALLBACK)(qeo_platform_security_context_t context, const qeo_platform_security_remote_registration_credentials_t* rrcred, qeo_platform_security_remote_registration_credentials_feedback_cb cb, int cmock_num_calls);
void qeo_platform_security_remote_registration_confirmation_needed_StubWithCallback(CMOCK_qeo_platform_security_remote_registration_confirmation_needed_CALLBACK Callback);

#endif
